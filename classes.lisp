(in-package :cm)

(defclass fomusobj-base ()
     ((id :accessor obj-id :initform nil :initarg :id)))
(defclass event-base (fomusobj-base)
  ((off :accessor event-off :initform nil :initarg :off)
   (partid :accessor event-partid :initform nil :initarg :partid)))
(defclass mark (event-base)
  ((off) (marks :accessor event-marks :initform nil :initarg :marks)
   (voice :accessor event-voice :initform 1 :initarg :voice)))
(defclass dur-base (mark)
  ((dur :accessor event-dur :initform 1 :initarg :dur)))
(defclass note (dur-base)
  ((note :accessor event-note :initform nil :initarg :note)))
(defclass part (fomusobj-base)
  ((name :accessor part-name :initform nil :initarg :name)
   (abbrev :accessor part-abbrev :initform nil :initarg :abbrev)
   (opts :accessor part-opts :initform nil :initarg :opts)
   (events :accessor part-events :initform nil :initarg :events)
   (instr :accessor part-instr :initform nil :initarg :instr)
   (props :accessor part-props :initform nil :initarg :props)
   (partid :accessor part-partid :initform nil :initarg :partid)))

(defclass note (dur-base)
  ((note :accessor event-note :initform nil :initarg :note)))
